<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LeetCode P34 Find First and Last Position of Element in Sorted Array</title>
      <link href="/2023/05/13/leetcode-p34-find-first-and-last-position-of-element-in-sorted-array/"/>
      <url>/2023/05/13/leetcode-p34-find-first-and-last-position-of-element-in-sorted-array/</url>
      
        <content type="html"><![CDATA[<h2 id="Observation"><a href="#Observation" class="headerlink" title="Observation"></a>Observation</h2><p>Since you have already known how to search for a certain element in an ordered array, finding the starting and ending position of a given value is almost the same. The key is that you may have to do binary search twice, one time for recording the left boundary and the another for recording the right.</p><p>Then, how to get the so-called left and right boundary when doing binary search? The principle is very simple. For example, if you want to get the left boundary, you need to classify the cases where the current element is equal to the target value and greater than the target value. Moreover, you have to update the left boundary when the current element is lower than the target. </p><p>If no element in the array equals to the target value, the left boundary may not be changed or it equals to the zero. Considering that we can assign the special value to the left boundary and right boundary. After the binary serach, if one of the boundaries has not been changed or the left one is greater than the right one, just output [-1,-1].</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">searchRange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        ans<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> ans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i<span class="token punctuation">;</span>        <span class="token keyword">int</span> lb <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">105</span><span class="token punctuation">,</span> rb <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">105</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>            i <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// Classify nums[i] > target and nums[i] == target together.</span>                r <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>                lb <span class="token operator">=</span> r<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Recoder left boundary when nums[i] >= target.</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                l <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        r <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>            i <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>                r <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                l <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                rb <span class="token operator">=</span> l<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lb <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">105</span> <span class="token operator">||</span> rb <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">105</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> ans<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rb <span class="token operator">-</span> lb <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ans<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> lb <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            ans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> rb <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> ans<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><p><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/">https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Akshare: Resolution to the missing of mini_racer.dll and calendar.json after using pyinstaller</title>
      <link href="/2023/05/12/akshare-resolution-to-the-missing-of-mini-racer-dll-and-calendar-json-after-using-pyinstaller/"/>
      <url>/2023/05/12/akshare-resolution-to-the-missing-of-mini-racer-dll-and-calendar-json-after-using-pyinstaller/</url>
      
        <content type="html"><![CDATA[<h2 id="Version-and-Environment"><a href="#Version-and-Environment" class="headerlink" title="Version and Environment"></a>Version and Environment</h2><p>Windows 10<br>python 3.8.3<br>akshare 1.9.64<br>pyinstaller 5.10.1</p><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>After using PyInstaller to pack my project, when I tried running that packaged program, it showed the following window, which meant the file mini_racer.dll was missing. However, when I tried to run it with the command “python main.py”, everything seemed to be OK.<br><img src="/2023/05/12/akshare-resolution-to-the-missing-of-mini-racer-dll-and-calendar-json-after-using-pyinstaller/MissingMiniRacerDll.png" alt="Missing mini_racer.dll"><br>Then I used the parameter –add-data to manually add mini_racer.dll (copied from the mini_racer package). It showed the error window again. It prompted that the file calendar.json was missing.<br><img src="/2023/05/12/akshare-resolution-to-the-missing-of-mini-racer-dll-and-calendar-json-after-using-pyinstaller/MissingCalendarJson.png" alt="Missing calendar.json"><br>Then I continued add calendar.json. But this time it did not work.</p><h2 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h2><p>I did not find any effective solution to the issue. The following solution is created by myself which have not been fully checked, so it may remains some other bugs.</p><p>Step 1: Type the follwong command. Make sure that you use -D instead of -F.</p><pre class=" language-python"><code class="language-python">pyinstaller <span class="token operator">-</span>D <span class="token operator">-</span>w <span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span>py</code></pre><p>Step 2: Open the location of main.exe and create a new folder named <em><b>akshare</b></em>. Open the akshare folder and create a new folder named <em><b>file_fold</b></em>. Please note that the name of those two folders cannot be changed!</p><p>Step 3: Open the installation location of the py_mini_racer package (dependency package of the akshare package), find mini_racer.dll, and copy it to the <em><b>akshare</b></em> folder just created.</p><p>Step 4: Open the installation location of the akshare package, find calendar.json, and copy it to the <em><b>file_fold</b></em> folder just created.</p><p>Step 5: Run main.exe.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/02/hello-world/"/>
      <url>/2023/05/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
